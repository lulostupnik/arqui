
fortune_64:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x243>
  400248:	78 38                	js     400282 <_init-0x236>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 2c 95 3d 74 95 8f 	add    BYTE PTR [rdx*4-0x706a8bc3],ch
  40028a:	f3 bb 36 4d 20 e0    	repz mov ebx,0xe0204d36
  400290:	5d                   	pop    rbp
  400291:	39 2d f9 a2 da 65    	cmp    DWORD PTR [rip+0x65daa2f9],ebp        # 661aa590 <_end+0x65ba94f0>
  400297:	69                   	.byte 0x69

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	1a 00                	sbb    al,BYTE PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	1f                   	(bad)  
  4002e9:	00 00                	add    BYTE PTR [rax],al
  4002eb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002fd:	00 00                	add    BYTE PTR [rax],al
  4002ff:	00 30                	add    BYTE PTR [rax],dh
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 12                	add    BYTE PTR [rdx],dl
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 37                	add    BYTE PTR [rdi],dh
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40032d:	00 00                	add    BYTE PTR [rax],al
  40032f:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
  400332:	00 00                	add    BYTE PTR [rax],al
  400334:	20 00                	and    BYTE PTR [rax],al
	...
  400346:	00 00                	add    BYTE PTR [rax],al
  400348:	0b 00                	or     eax,DWORD PTR [rax]
  40034a:	00 00                	add    BYTE PTR [rax],al
  40034c:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000400360 <.dynstr>:
  400360:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400364:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400366:	73 6f                	jae    4003d7 <_init-0xe1>
  400368:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40036d:	69 73 6f 63 39 39 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f393963
  400374:	73 63                	jae    4003d9 <_init-0xdf>
  400376:	61                   	(bad)  
  400377:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400378:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
  40037c:	74 73                	je     4003f1 <_init-0xc7>
  40037e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  400381:	73 74                	jae    4003f7 <_init-0xc1>
  400383:	61                   	(bad)  
  400384:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  400387:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
  40038a:	5f                   	pop    rdi
  40038b:	66 61                	data16 (bad) 
  40038d:	69 6c 00 70 72 69 6e 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x746e6972
  400394:	74 
  400395:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
  400399:	6c                   	ins    BYTE PTR es:[rdi],dx
  40039a:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  4003a1:	72 74                	jb     400417 <_init-0xa1>
  4003a3:	5f                   	pop    rdi
  4003a4:	6d                   	ins    DWORD PTR es:[rdi],dx
  4003a5:	61                   	(bad)  
  4003a6:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  4003ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003af:	5f                   	pop    rdi
  4003b0:	73 74                	jae    400426 <_init-0x92>
  4003b2:	61                   	(bad)  
  4003b3:	72 74                	jb     400429 <_init-0x8f>
  4003b5:	5f                   	pop    rdi
  4003b6:	5f                   	pop    rdi
  4003b7:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  4003ba:	49                   	rex.WB
  4003bb:	42                   	rex.X
  4003bc:	43 5f                	rex.XB pop r15
  4003be:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003c0:	37                   	(bad)  
  4003c1:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  4003c4:	49                   	rex.WB
  4003c5:	42                   	rex.X
  4003c6:	43 5f                	rex.XB pop r15
  4003c8:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003ca:	34 00                	xor    al,0x0
  4003cc:	47                   	rex.RXB
  4003cd:	4c                   	rex.WR
  4003ce:	49                   	rex.WB
  4003cf:	42                   	rex.X
  4003d0:	43 5f                	rex.XB pop r15
  4003d2:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003d4:	32 2e                	xor    ch,BYTE PTR [rsi]
  4003d6:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000004003d8 <.gnu.version>:
  4003d8:	00 00                	add    BYTE PTR [rax],al
  4003da:	02 00                	add    al,BYTE PTR [rax]
  4003dc:	03 00                	add    eax,DWORD PTR [rax]
  4003de:	02 00                	add    al,BYTE PTR [rax]
  4003e0:	02 00                	add    al,BYTE PTR [rax]
  4003e2:	00 00                	add    BYTE PTR [rax],al
  4003e4:	04 00                	add    al,0x0

Disassembly of section .gnu.version_r:

00000000004003e8 <.gnu.version_r>:
  4003e8:	01 00                	add    DWORD PTR [rax],eax
  4003ea:	03 00                	add    eax,DWORD PTR [rax]
  4003ec:	01 00                	add    DWORD PTR [rax],eax
  4003ee:	00 00                	add    BYTE PTR [rax],al
  4003f0:	10 00                	adc    BYTE PTR [rax],al
  4003f2:	00 00                	add    BYTE PTR [rax],al
  4003f4:	00 00                	add    BYTE PTR [rax],al
  4003f6:	00 00                	add    BYTE PTR [rax],al
  4003f8:	17                   	(bad)  
  4003f9:	69 69 0d 00 00 04 00 	imul   ebp,DWORD PTR [rcx+0xd],0x40000
  400400:	58                   	pop    rax
  400401:	00 00                	add    BYTE PTR [rax],al
  400403:	00 10                	add    BYTE PTR [rax],dl
  400405:	00 00                	add    BYTE PTR [rax],al
  400407:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
  40040a:	69 0d 00 00 03 00 62 	imul   ecx,DWORD PTR [rip+0x30000],0x62        # 430414 <__FRAME_END__+0x2f904>
  400411:	00 00 00 
  400414:	10 00                	adc    BYTE PTR [rax],al
  400416:	00 00                	add    BYTE PTR [rax],al
  400418:	75 1a                	jne    400434 <_init-0x84>
  40041a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400420:	6c                   	ins    BYTE PTR es:[rdi],dx
  400421:	00 00                	add    BYTE PTR [rax],al
  400423:	00 00                	add    BYTE PTR [rax],al
  400425:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400428 <.rela.dyn>:
  400428:	f8                   	clc    
  400429:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  40042c:	00 00                	add    BYTE PTR [rax],al
  40042e:	00 00                	add    BYTE PTR [rax],al
  400430:	06                   	(bad)  
  400431:	00 00                	add    BYTE PTR [rax],al
  400433:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400439 <_init-0x7f>
  400439:	00 00                	add    BYTE PTR [rax],al
  40043b:	00 00                	add    BYTE PTR [rax],al
  40043d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.plt:

0000000000400440 <.rela.plt>:
  400440:	18 10                	sbb    BYTE PTR [rax],dl
  400442:	60                   	(bad)  
  400443:	00 00                	add    BYTE PTR [rax],al
  400445:	00 00                	add    BYTE PTR [rax],al
  400447:	00 07                	add    BYTE PTR [rdi],al
  400449:	00 00                	add    BYTE PTR [rax],al
  40044b:	00 01                	add    BYTE PTR [rcx],al
	...
  400455:	00 00                	add    BYTE PTR [rax],al
  400457:	00 20                	add    BYTE PTR [rax],ah
  400459:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40045c:	00 00                	add    BYTE PTR [rax],al
  40045e:	00 00                	add    BYTE PTR [rax],al
  400460:	07                   	(bad)  
  400461:	00 00                	add    BYTE PTR [rax],al
  400463:	00 02                	add    BYTE PTR [rdx],al
	...
  40046d:	00 00                	add    BYTE PTR [rax],al
  40046f:	00 28                	add    BYTE PTR [rax],ch
  400471:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400474:	00 00                	add    BYTE PTR [rax],al
  400476:	00 00                	add    BYTE PTR [rax],al
  400478:	07                   	(bad)  
  400479:	00 00                	add    BYTE PTR [rax],al
  40047b:	00 03                	add    BYTE PTR [rbx],al
	...
  400485:	00 00                	add    BYTE PTR [rax],al
  400487:	00 30                	add    BYTE PTR [rax],dh
  400489:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40048c:	00 00                	add    BYTE PTR [rax],al
  40048e:	00 00                	add    BYTE PTR [rax],al
  400490:	07                   	(bad)  
  400491:	00 00                	add    BYTE PTR [rax],al
  400493:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40049e:	00 00                	add    BYTE PTR [rax],al
  4004a0:	38 10                	cmp    BYTE PTR [rax],dl
  4004a2:	60                   	(bad)  
  4004a3:	00 00                	add    BYTE PTR [rax],al
  4004a5:	00 00                	add    BYTE PTR [rax],al
  4004a7:	00 07                	add    BYTE PTR [rdi],al
  4004a9:	00 00                	add    BYTE PTR [rax],al
  4004ab:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .init:

00000000004004b8 <_init>:
  4004b8:	48 83 ec 08          	sub    rsp,0x8
  4004bc:	48 8b 05 35 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b35]        # 600ff8 <__gmon_start__>
  4004c3:	48 85 c0             	test   rax,rax
  4004c6:	74 05                	je     4004cd <_init+0x15>
  4004c8:	e8 73 00 00 00       	call   400540 <__gmon_start__@plt>
  4004cd:	48 83 c4 08          	add    rsp,0x8
  4004d1:	c3                   	ret    

Disassembly of section .plt:

00000000004004e0 <.plt>:
  4004e0:	ff 35 22 0b 20 00    	push   QWORD PTR [rip+0x200b22]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004e6:	ff 25 24 0b 20 00    	jmp    QWORD PTR [rip+0x200b24]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004004f0 <puts@plt>:
  4004f0:	ff 25 22 0b 20 00    	jmp    QWORD PTR [rip+0x200b22]        # 601018 <puts@GLIBC_2.2.5>
  4004f6:	68 00 00 00 00       	push   0x0
  4004fb:	e9 e0 ff ff ff       	jmp    4004e0 <.plt>

0000000000400500 <__stack_chk_fail@plt>:
  400500:	ff 25 1a 0b 20 00    	jmp    QWORD PTR [rip+0x200b1a]        # 601020 <__stack_chk_fail@GLIBC_2.4>
  400506:	68 01 00 00 00       	push   0x1
  40050b:	e9 d0 ff ff ff       	jmp    4004e0 <.plt>

0000000000400510 <printf@plt>:
  400510:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 601028 <printf@GLIBC_2.2.5>
  400516:	68 02 00 00 00       	push   0x2
  40051b:	e9 c0 ff ff ff       	jmp    4004e0 <.plt>

0000000000400520 <__libc_start_main@plt>:
  400520:	ff 25 0a 0b 20 00    	jmp    QWORD PTR [rip+0x200b0a]        # 601030 <__libc_start_main@GLIBC_2.2.5>
  400526:	68 03 00 00 00       	push   0x3
  40052b:	e9 b0 ff ff ff       	jmp    4004e0 <.plt>

0000000000400530 <__isoc99_scanf@plt>:
  400530:	ff 25 02 0b 20 00    	jmp    QWORD PTR [rip+0x200b02]        # 601038 <__isoc99_scanf@GLIBC_2.7>
  400536:	68 04 00 00 00       	push   0x4
  40053b:	e9 a0 ff ff ff       	jmp    4004e0 <.plt>

Disassembly of section .plt.got:

0000000000400540 <__gmon_start__@plt>:
  400540:	ff 25 b2 0a 20 00    	jmp    QWORD PTR [rip+0x200ab2]        # 600ff8 <__gmon_start__>
  400546:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000400550 <_start>:
  400550:	31 ed                	xor    ebp,ebp
  400552:	49 89 d1             	mov    r9,rdx
  400555:	5e                   	pop    rsi
  400556:	48 89 e2             	mov    rdx,rsp
  400559:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40055d:	50                   	push   rax
  40055e:	54                   	push   rsp
  40055f:	49 c7 c0 90 07 40 00 	mov    r8,0x400790
  400566:	48 c7 c1 20 07 40 00 	mov    rcx,0x400720
  40056d:	48 c7 c7 a1 06 40 00 	mov    rdi,0x4006a1
  400574:	e8 a7 ff ff ff       	call   400520 <__libc_start_main@plt>
  400579:	f4                   	hlt    
  40057a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400580 <deregister_tm_clones>:
  400580:	b8 9f 10 60 00       	mov    eax,0x60109f
  400585:	55                   	push   rbp
  400586:	48 2d 98 10 60 00    	sub    rax,0x601098
  40058c:	48 83 f8 0e          	cmp    rax,0xe
  400590:	48 89 e5             	mov    rbp,rsp
  400593:	76 1b                	jbe    4005b0 <deregister_tm_clones+0x30>
  400595:	b8 00 00 00 00       	mov    eax,0x0
  40059a:	48 85 c0             	test   rax,rax
  40059d:	74 11                	je     4005b0 <deregister_tm_clones+0x30>
  40059f:	5d                   	pop    rbp
  4005a0:	bf 98 10 60 00       	mov    edi,0x601098
  4005a5:	ff e0                	jmp    rax
  4005a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  4005ae:	00 00 
  4005b0:	5d                   	pop    rbp
  4005b1:	c3                   	ret    
  4005b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4005b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4005bd:	00 00 00 

00000000004005c0 <register_tm_clones>:
  4005c0:	be 98 10 60 00       	mov    esi,0x601098
  4005c5:	55                   	push   rbp
  4005c6:	48 81 ee 98 10 60 00 	sub    rsi,0x601098
  4005cd:	48 c1 fe 03          	sar    rsi,0x3
  4005d1:	48 89 e5             	mov    rbp,rsp
  4005d4:	48 89 f0             	mov    rax,rsi
  4005d7:	48 c1 e8 3f          	shr    rax,0x3f
  4005db:	48 01 c6             	add    rsi,rax
  4005de:	48 d1 fe             	sar    rsi,1
  4005e1:	74 15                	je     4005f8 <register_tm_clones+0x38>
  4005e3:	b8 00 00 00 00       	mov    eax,0x0
  4005e8:	48 85 c0             	test   rax,rax
  4005eb:	74 0b                	je     4005f8 <register_tm_clones+0x38>
  4005ed:	5d                   	pop    rbp
  4005ee:	bf 98 10 60 00       	mov    edi,0x601098
  4005f3:	ff e0                	jmp    rax
  4005f5:	0f 1f 00             	nop    DWORD PTR [rax]
  4005f8:	5d                   	pop    rbp
  4005f9:	c3                   	ret    
  4005fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 91 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a91],0x0        # 601098 <__TMC_END__>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   rbp
  40060a:	48 89 e5             	mov    rbp,rsp
  40060d:	e8 6e ff ff ff       	call   400580 <deregister_tm_clones>
  400612:	5d                   	pop    rbp
  400613:	c6 05 7e 0a 20 00 01 	mov    BYTE PTR [rip+0x200a7e],0x1        # 601098 <__TMC_END__>
  40061a:	f3 c3                	repz ret 
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <frame_dummy>:
  400620:	bf 20 0e 60 00       	mov    edi,0x600e20
  400625:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400629:	75 05                	jne    400630 <frame_dummy+0x10>
  40062b:	eb 93                	jmp    4005c0 <register_tm_clones>
  40062d:	0f 1f 00             	nop    DWORD PTR [rax]
  400630:	b8 00 00 00 00       	mov    eax,0x0
  400635:	48 85 c0             	test   rax,rax
  400638:	74 f1                	je     40062b <frame_dummy+0xb>
  40063a:	55                   	push   rbp
  40063b:	48 89 e5             	mov    rbp,rsp
  40063e:	ff d0                	call   rax
  400640:	5d                   	pop    rbp
  400641:	e9 7a ff ff ff       	jmp    4005c0 <register_tm_clones>

0000000000400646 <fortune>:
  400646:	55                   	push   rbp
  400647:	48 89 e5             	mov    rbp,rsp
  40064a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40064e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400655:	eb 09                	jmp    400660 <fortune+0x1a>
  400657:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  40065b:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  400660:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400664:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400667:	84 c0                	test   al,al
  400669:	75 ec                	jne    400657 <fortune+0x11>
  40066b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40066e:	48 63 c8             	movsxd rcx,eax
  400671:	48 ba ab aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
  400678:	aa aa aa 
  40067b:	48 89 c8             	mov    rax,rcx
  40067e:	48 f7 e2             	mul    rdx
  400681:	48 c1 ea 02          	shr    rdx,0x2
  400685:	48 89 d0             	mov    rax,rdx
  400688:	48 01 c0             	add    rax,rax
  40068b:	48 01 d0             	add    rax,rdx
  40068e:	48 01 c0             	add    rax,rax
  400691:	48 29 c1             	sub    rcx,rax
  400694:	48 89 ca             	mov    rdx,rcx
  400697:	48 8b 04 d5 60 10 60 	mov    rax,QWORD PTR [rdx*8+0x601060]
  40069e:	00 
  40069f:	5d                   	pop    rbp
  4006a0:	c3                   	ret    

00000000004006a1 <main>:
  4006a1:	55                   	push   rbp
  4006a2:	48 89 e5             	mov    rbp,rsp
  4006a5:	48 83 ec 30          	sub    rsp,0x30
  4006a9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  4006b0:	00 00 
  4006b2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4006b6:	31 c0                	xor    eax,eax
  4006b8:	bf 10 09 40 00       	mov    edi,0x400910
  4006bd:	e8 2e fe ff ff       	call   4004f0 <puts@plt>
  4006c2:	bf 97 09 40 00       	mov    edi,0x400997
  4006c7:	b8 00 00 00 00       	mov    eax,0x0
  4006cc:	e8 3f fe ff ff       	call   400510 <printf@plt>
  4006d1:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  4006d5:	48 89 c6             	mov    rsi,rax
  4006d8:	bf ac 09 40 00       	mov    edi,0x4009ac
  4006dd:	b8 00 00 00 00       	mov    eax,0x0
  4006e2:	e8 49 fe ff ff       	call   400530 <__isoc99_scanf@plt>
  4006e7:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  4006eb:	48 89 c7             	mov    rdi,rax
  4006ee:	e8 53 ff ff ff       	call   400646 <fortune>
  4006f3:	48 89 c6             	mov    rsi,rax
  4006f6:	bf af 09 40 00       	mov    edi,0x4009af
  4006fb:	b8 00 00 00 00       	mov    eax,0x0
  400700:	e8 0b fe ff ff       	call   400510 <printf@plt>
  400705:	b8 00 00 00 00       	mov    eax,0x0
  40070a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  40070e:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
  400715:	00 00 
  400717:	74 05                	je     40071e <main+0x7d>
  400719:	e8 e2 fd ff ff       	call   400500 <__stack_chk_fail@plt>
  40071e:	c9                   	leave  
  40071f:	c3                   	ret    

0000000000400720 <__libc_csu_init>:
  400720:	41 57                	push   r15
  400722:	41 56                	push   r14
  400724:	41 89 ff             	mov    r15d,edi
  400727:	41 55                	push   r13
  400729:	41 54                	push   r12
  40072b:	4c 8d 25 de 06 20 00 	lea    r12,[rip+0x2006de]        # 600e10 <__frame_dummy_init_array_entry>
  400732:	55                   	push   rbp
  400733:	48 8d 2d de 06 20 00 	lea    rbp,[rip+0x2006de]        # 600e18 <__do_global_dtors_aux_fini_array_entry>
  40073a:	53                   	push   rbx
  40073b:	49 89 f6             	mov    r14,rsi
  40073e:	49 89 d5             	mov    r13,rdx
  400741:	4c 29 e5             	sub    rbp,r12
  400744:	48 83 ec 08          	sub    rsp,0x8
  400748:	48 c1 fd 03          	sar    rbp,0x3
  40074c:	e8 67 fd ff ff       	call   4004b8 <_init>
  400751:	48 85 ed             	test   rbp,rbp
  400754:	74 20                	je     400776 <__libc_csu_init+0x56>
  400756:	31 db                	xor    ebx,ebx
  400758:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40075f:	00 
  400760:	4c 89 ea             	mov    rdx,r13
  400763:	4c 89 f6             	mov    rsi,r14
  400766:	44 89 ff             	mov    edi,r15d
  400769:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40076d:	48 83 c3 01          	add    rbx,0x1
  400771:	48 39 eb             	cmp    rbx,rbp
  400774:	75 ea                	jne    400760 <__libc_csu_init+0x40>
  400776:	48 83 c4 08          	add    rsp,0x8
  40077a:	5b                   	pop    rbx
  40077b:	5d                   	pop    rbp
  40077c:	41 5c                	pop    r12
  40077e:	41 5d                	pop    r13
  400780:	41 5e                	pop    r14
  400782:	41 5f                	pop    r15
  400784:	c3                   	ret    
  400785:	90                   	nop
  400786:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40078d:	00 00 00 

0000000000400790 <__libc_csu_fini>:
  400790:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400794 <_fini>:
  400794:	48 83 ec 08          	sub    rsp,0x8
  400798:	48 83 c4 08          	add    rsp,0x8
  40079c:	c3                   	ret    

Disassembly of section .rodata:

00000000004007a0 <_IO_stdin_used>:
  4007a0:	01 00                	add    DWORD PTR [rax],eax
  4007a2:	02 00                	add    al,BYTE PTR [rax]
  4007a4:	00 00                	add    BYTE PTR [rax],al
  4007a6:	00 00                	add    BYTE PTR [rax],al
  4007a8:	42 72 65             	rex.X jb 400810 <_IO_stdin_used+0x70>
  4007ab:	61                   	(bad)  
  4007ac:	6b 20 69             	imul   esp,DWORD PTR [rax],0x69
  4007af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4007b0:	74 6f                	je     400821 <_IO_stdin_used+0x81>
  4007b2:	20 6a 61             	and    BYTE PTR [rdx+0x61],ch
  4007b5:	69 6c 20 61 6e 64 20 	imul   ebp,DWORD PTR [rax+riz*1+0x61],0x6320646e
  4007bc:	63 
  4007bd:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007be:	61                   	(bad)  
  4007bf:	69 6d 20 70 6f 6c 69 	imul   ebp,DWORD PTR [rbp+0x20],0x696c6f70
  4007c6:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
  4007c9:	62 72 75 74 61       	(bad)
  4007ce:	6c                   	ins    BYTE PTR es:[rdi],dx
  4007cf:	69 74 79 2e 00 00 00 	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x0
  4007d6:	00 
  4007d7:	00 4e 65             	add    BYTE PTR [rsi+0x65],cl
  4007da:	76 65                	jbe    400841 <_IO_stdin_used+0xa1>
  4007dc:	72 20                	jb     4007fe <_IO_stdin_used+0x5e>
  4007de:	62                   	(bad)  
  4007df:	65 20 6c 65 64       	and    BYTE PTR gs:[rbp+riz*2+0x64],ch
  4007e4:	20 61 73             	and    BYTE PTR [rcx+0x73],ah
  4007e7:	74 72                	je     40085b <_IO_stdin_used+0xbb>
  4007e9:	61                   	(bad)  
  4007ea:	79 20                	jns    40080c <_IO_stdin_used+0x6c>
  4007ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4007ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4007ee:	74 6f                	je     40085f <_IO_stdin_used+0xbf>
  4007f0:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
  4007f4:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  4007f7:	74 68                	je     400861 <_IO_stdin_used+0xc1>
  4007f9:	20 6f 66             	and    BYTE PTR [rdi+0x66],ch
  4007fc:	20 76 69             	and    BYTE PTR [rsi+0x69],dh
  4007ff:	72 74                	jb     400875 <_IO_stdin_used+0xd5>
  400801:	75 65                	jne    400868 <_IO_stdin_used+0xc8>
  400803:	2e 00 00             	add    BYTE PTR cs:[rax],al
  400806:	00 00                	add    BYTE PTR [rax],al
  400808:	59                   	pop    rcx
  400809:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40080a:	75 20                	jne    40082c <_IO_stdin_used+0x8c>
  40080c:	77 69                	ja     400877 <_IO_stdin_used+0xd7>
  40080e:	6c                   	ins    BYTE PTR es:[rdi],dx
  40080f:	6c                   	ins    BYTE PTR es:[rdi],dx
  400810:	20 66 6f             	and    BYTE PTR [rsi+0x6f],ah
  400813:	72 67                	jb     40087c <_IO_stdin_used+0xdc>
  400815:	65 74 20             	gs je  400838 <_IO_stdin_used+0x98>
  400818:	74 68                	je     400882 <_IO_stdin_used+0xe2>
  40081a:	61                   	(bad)  
  40081b:	74 20                	je     40083d <_IO_stdin_used+0x9d>
  40081d:	79 6f                	jns    40088e <_IO_stdin_used+0xee>
  40081f:	75 20                	jne    400841 <_IO_stdin_used+0xa1>
  400821:	65 76 65             	gs jbe 400889 <_IO_stdin_used+0xe9>
  400824:	72 20                	jb     400846 <_IO_stdin_used+0xa6>
  400826:	6b 6e 65 77          	imul   ebp,DWORD PTR [rsi+0x65],0x77
  40082a:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  40082d:	2e 00 00             	add    BYTE PTR cs:[rax],al
  400830:	59                   	pop    rcx
  400831:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400832:	75 72                	jne    4008a6 <_IO_stdin_used+0x106>
  400834:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
  400837:	63 69 65             	movsxd ebp,DWORD PTR [rcx+0x65]
  40083a:	74 79                	je     4008b5 <_IO_stdin_used+0x115>
  40083c:	20 77 69             	and    BYTE PTR [rdi+0x69],dh
  40083f:	6c                   	ins    BYTE PTR es:[rdi],dx
  400840:	6c                   	ins    BYTE PTR es:[rdi],dx
  400841:	20 62 65             	and    BYTE PTR [rdx+0x65],ah
  400844:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
  400847:	75 67                	jne    4008b0 <_IO_stdin_used+0x110>
  400849:	68 74 20 62 79       	push   0x79622074
  40084e:	20 70 65             	and    BYTE PTR [rax+0x65],dh
  400851:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400852:	70 6c                	jo     4008c0 <_IO_stdin_used+0x120>
  400854:	65 20 6f 66          	and    BYTE PTR gs:[rdi+0x66],ch
  400858:	20 74 61 73          	and    BYTE PTR [rcx+riz*2+0x73],dh
  40085c:	74 65                	je     4008c3 <_IO_stdin_used+0x123>
  40085e:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
  400861:	64 20 72 65          	and    BYTE PTR fs:[rdx+0x65],dh
  400865:	66 69 6e 65 6d 65    	imul   bp,WORD PTR [rsi+0x65],0x656d
  40086b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40086c:	74 2e                	je     40089c <_IO_stdin_used+0xfc>
  40086e:	00 00                	add    BYTE PTR [rax],al
  400870:	59                   	pop    rcx
  400871:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400872:	75 20                	jne    400894 <_IO_stdin_used+0xf4>
  400874:	77 69                	ja     4008df <_IO_stdin_used+0x13f>
  400876:	6c                   	ins    BYTE PTR es:[rdi],dx
  400877:	6c                   	ins    BYTE PTR es:[rdi],dx
  400878:	20 62 65             	and    BYTE PTR [rdx+0x65],ah
  40087b:	20 68 6f             	and    BYTE PTR [rax+0x6f],ch
  40087e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40087f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400880:	72 65                	jb     4008e7 <_IO_stdin_used+0x147>
  400882:	64 20 66 6f          	and    BYTE PTR fs:[rsi+0x6f],ah
  400886:	72 20                	jb     4008a8 <_IO_stdin_used+0x108>
  400888:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  40088b:	74 72                	je     4008ff <_IO_stdin_used+0x15f>
  40088d:	69 62 75 74 69 6e 67 	imul   esp,DWORD PTR [rdx+0x75],0x676e6974
  400894:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
  400897:	75 72                	jne    40090b <_IO_stdin_used+0x16b>
  400899:	20 74 69 6d          	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  40089d:	65 20 61 6e          	and    BYTE PTR gs:[rcx+0x6e],ah
  4008a1:	64 20 73 6b          	and    BYTE PTR fs:[rbx+0x6b],dh
  4008a5:	69 6c 6c 20 74 6f 20 	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x61206f74
  4008ac:	61 
  4008ad:	20 77 6f             	and    BYTE PTR [rdi+0x6f],dh
  4008b0:	72 74                	jb     400926 <_IO_stdin_used+0x186>
  4008b2:	68 79 20 63 61       	push   0x61632079
  4008b7:	75 73                	jne    40092c <_IO_stdin_used+0x18c>
  4008b9:	65 2e 00 00          	gs add BYTE PTR cs:[rax],al
  4008bd:	00 00                	add    BYTE PTR [rax],al
  4008bf:	00 45 78             	add    BYTE PTR [rbp+0x78],al
  4008c2:	70 65                	jo     400929 <_IO_stdin_used+0x189>
  4008c4:	63 74 20 74          	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  4008c8:	68 65 20 77 6f       	push   0x6f772065
  4008cd:	72 73                	jb     400942 <_IO_stdin_used+0x1a2>
  4008cf:	74 2c                	je     4008fd <_IO_stdin_used+0x15d>
  4008d1:	20 69 74             	and    BYTE PTR [rcx+0x74],ch
  4008d4:	27                   	(bad)  
  4008d5:	73 20                	jae    4008f7 <_IO_stdin_used+0x157>
  4008d7:	74 68                	je     400941 <_IO_stdin_used+0x1a1>
  4008d9:	65 20 6c 65 61       	and    BYTE PTR gs:[rbp+riz*2+0x61],ch
  4008de:	73 74                	jae    400954 <_IO_stdin_used+0x1b4>
  4008e0:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
  4008e3:	75 20                	jne    400905 <_IO_stdin_used+0x165>
  4008e5:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
  4008e8:	20 64 6f 2e          	and    BYTE PTR [rdi+rbp*2+0x2e],ah
  4008ec:	00 59 6f             	add    BYTE PTR [rcx+0x6f],bl
  4008ef:	75 20                	jne    400911 <_IO_stdin_used+0x171>
  4008f1:	6d                   	ins    DWORD PTR es:[rdi],dx
  4008f2:	61                   	(bad)  
  4008f3:	79 20                	jns    400915 <_IO_stdin_used+0x175>
  4008f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4008f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4008f7:	74 20                	je     400919 <_IO_stdin_used+0x179>
  4008f9:	67 65 74 20          	addr32 gs je 40091d <_IO_stdin_used+0x17d>
  4008fd:	74 68                	je     400967 <_IO_stdin_used+0x1c7>
  4008ff:	69 73 20 66 6f 72 74 	imul   esi,DWORD PTR [rbx+0x20],0x74726f66
  400906:	75 6e                	jne    400976 <_IO_stdin_used+0x1d6>
  400908:	65 00 00             	add    BYTE PTR gs:[rax],al
  40090b:	00 00                	add    BYTE PTR [rax],al
  40090d:	00 00                	add    BYTE PTR [rax],al
  40090f:	00 56 69             	add    BYTE PTR [rsi+0x69],dl
  400912:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  400914:	76 65                	jbe    40097b <_IO_stdin_used+0x1db>
  400916:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400917:	69 64 6f 5c 00 20 61 	imul   esp,DWORD PTR [rdi+rbp*2+0x5c],0x6c612000
  40091e:	6c 
  40091f:	20 61 64             	and    BYTE PTR [rcx+0x64],ah
  400922:	69 62 69 6e 61 64 6f 	imul   esp,DWORD PTR [rdx+0x69],0x6f64616e
  400929:	72 20                	jb     40094b <_IO_stdin_used+0x1ab>
  40092b:	64 65 20 6c 61 20    	fs and BYTE PTR gs:[rcx+riz*2+0x20],ch
  400931:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  400933:	72 74                	jb     4009a9 <_IO_stdin_used+0x209>
  400935:	75 6e                	jne    4009a5 <_IO_stdin_used+0x205>
  400937:	61                   	(bad)  
  400938:	21 20                	and    DWORD PTR [rax],esp
  40093a:	20 20                	and    BYTE PTR [rax],ah
  40093c:	20 20                	and    BYTE PTR [rax],ah
  40093e:	20 20                	and    BYTE PTR [rax],ah
  400940:	20 20                	and    BYTE PTR [rax],ah
  400942:	20 20                	and    BYTE PTR [rax],ah
  400944:	20 20                	and    BYTE PTR [rax],ah
  400946:	20 20                	and    BYTE PTR [rax],ah
  400948:	20 20                	and    BYTE PTR [rax],ah
  40094a:	20 20                	and    BYTE PTR [rax],ah
  40094c:	20 20                	and    BYTE PTR [rax],ah
  40094e:	20 20                	and    BYTE PTR [rax],ah
  400950:	20 20                	and    BYTE PTR [rax],ah
  400952:	20 20                	and    BYTE PTR [rax],ah
  400954:	20 20                	and    BYTE PTR [rax],ah
  400956:	20 20                	and    BYTE PTR [rax],ah
  400958:	20 20                	and    BYTE PTR [rax],ah
  40095a:	20 20                	and    BYTE PTR [rax],ah
  40095c:	20 20                	and    BYTE PTR [rax],ah
  40095e:	20 20                	and    BYTE PTR [rax],ah
  400960:	20 20                	and    BYTE PTR [rax],ah
  400962:	20 20                	and    BYTE PTR [rax],ah
  400964:	20 20                	and    BYTE PTR [rax],ah
  400966:	20 20                	and    BYTE PTR [rax],ah
  400968:	20 20                	and    BYTE PTR [rax],ah
  40096a:	20 20                	and    BYTE PTR [rax],ah
  40096c:	20 20                	and    BYTE PTR [rax],ah
  40096e:	20 20                	and    BYTE PTR [rax],ah
  400970:	20 20                	and    BYTE PTR [rax],ah
  400972:	20 20                	and    BYTE PTR [rax],ah
  400974:	20 20                	and    BYTE PTR [rax],ah
  400976:	20 20                	and    BYTE PTR [rax],ah
  400978:	20 20                	and    BYTE PTR [rax],ah
  40097a:	20 20                	and    BYTE PTR [rax],ah
  40097c:	20 20                	and    BYTE PTR [rax],ah
  40097e:	20 20                	and    BYTE PTR [rax],ah
  400980:	20 20                	and    BYTE PTR [rax],ah
  400982:	20 20                	and    BYTE PTR [rax],ah
  400984:	20 20                	and    BYTE PTR [rax],ah
  400986:	20 20                	and    BYTE PTR [rax],ah
  400988:	20 20                	and    BYTE PTR [rax],ah
  40098a:	20 20                	and    BYTE PTR [rax],ah
  40098c:	20 20                	and    BYTE PTR [rax],ah
  40098e:	20 20                	and    BYTE PTR [rax],ah
  400990:	20 20                	and    BYTE PTR [rax],ah
  400992:	20 20                	and    BYTE PTR [rax],ah
  400994:	20 20                	and    BYTE PTR [rax],ah
  400996:	20 43 75             	and    BYTE PTR [rbx+0x75],al
  400999:	61                   	(bad)  
  40099a:	6c                   	ins    BYTE PTR es:[rdi],dx
  40099b:	20 65 73             	and    BYTE PTR [rbp+0x73],ah
  40099e:	20 74 75 20          	and    BYTE PTR [rbp+rsi*2+0x20],dh
  4009a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4009a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4009a4:	6d                   	ins    DWORD PTR es:[rdi],dx
  4009a5:	62 72 65 3f 3a 20    	vpminuw ymm12{k7},ymm3,DWORD PTR [rax]{1to8}
  4009ab:	00 25 73 00 0a 54    	add    BYTE PTR [rip+0x540a0073],ah        # 544a0a24 <_end+0x53e9f984>
  4009b1:	75 20                	jne    4009d3 <__GNU_EH_FRAME_HDR+0xf>
  4009b3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  4009b5:	72 74                	jb     400a2b <__GNU_EH_FRAME_HDR+0x67>
  4009b7:	75 6e                	jne    400a27 <__GNU_EH_FRAME_HDR+0x63>
  4009b9:	61                   	(bad)  
  4009ba:	20 65 73             	and    BYTE PTR [rbp+0x73],ah
  4009bd:	3a 0a                	cmp    cl,BYTE PTR [rdx]
  4009bf:	20                   	.byte 0x20
  4009c0:	25                   	.byte 0x25
  4009c1:	73 0a                	jae    4009cd <__GNU_EH_FRAME_HDR+0x9>
	...

Disassembly of section .eh_frame_hdr:

00000000004009c4 <__GNU_EH_FRAME_HDR>:
  4009c4:	01 1b                	add    DWORD PTR [rbx],ebx
  4009c6:	03 3b                	add    edi,DWORD PTR [rbx]
  4009c8:	38 00                	cmp    BYTE PTR [rax],al
  4009ca:	00 00                	add    BYTE PTR [rax],al
  4009cc:	06                   	(bad)  
  4009cd:	00 00                	add    BYTE PTR [rax],al
  4009cf:	00 1c fb             	add    BYTE PTR [rbx+rdi*8],bl
  4009d2:	ff                   	(bad)  
  4009d3:	ff 84 00 00 00 8c fb 	inc    DWORD PTR [rax+rax*1-0x4740000]
  4009da:	ff                   	(bad)  
  4009db:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  4009df:	00 82 fc ff ff ac    	add    BYTE PTR [rdx-0x53000004],al
  4009e5:	00 00                	add    BYTE PTR [rax],al
  4009e7:	00 dd                	add    ch,bl
  4009e9:	fc                   	cld    
  4009ea:	ff                   	(bad)  
  4009eb:	ff cc                	dec    esp
  4009ed:	00 00                	add    BYTE PTR [rax],al
  4009ef:	00 5c fd ff          	add    BYTE PTR [rbp+rdi*8-0x1],bl
  4009f3:	ff                   	(bad)  
  4009f4:	ec                   	in     al,dx
  4009f5:	00 00                	add    BYTE PTR [rax],al
  4009f7:	00 cc                	add    ah,cl
  4009f9:	fd                   	std    
  4009fa:	ff                   	(bad)  
  4009fb:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000400a00 <__FRAME_END__-0x110>:
  400a00:	14 00                	adc    al,0x0
  400a02:	00 00                	add    BYTE PTR [rax],al
  400a04:	00 00                	add    BYTE PTR [rax],al
  400a06:	00 00                	add    BYTE PTR [rax],al
  400a08:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a0b:	00 01                	add    BYTE PTR [rcx],al
  400a0d:	78 10                	js     400a1f <__GNU_EH_FRAME_HDR+0x5b>
  400a0f:	01 1b                	add    DWORD PTR [rbx],ebx
  400a11:	0c 07                	or     al,0x7
  400a13:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  400a19:	00 00                	add    BYTE PTR [rax],al
  400a1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a1e:	00 00                	add    BYTE PTR [rax],al
  400a20:	30 fb                	xor    bl,bh
  400a22:	ff                   	(bad)  
  400a23:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  400a2d:	00 00                	add    BYTE PTR [rax],al
  400a2f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  400a32:	00 00                	add    BYTE PTR [rax],al
  400a34:	00 00                	add    BYTE PTR [rax],al
  400a36:	00 00                	add    BYTE PTR [rax],al
  400a38:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400a3b:	00 01                	add    BYTE PTR [rcx],al
  400a3d:	78 10                	js     400a4f <__GNU_EH_FRAME_HDR+0x8b>
  400a3f:	01 1b                	add    DWORD PTR [rbx],ebx
  400a41:	0c 07                	or     al,0x7
  400a43:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  400a49:	00 00                	add    BYTE PTR [rax],al
  400a4b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a4e:	00 00                	add    BYTE PTR [rax],al
  400a50:	90                   	nop
  400a51:	fa                   	cli    
  400a52:	ff                   	(bad)  
  400a53:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
  400a56:	00 00                	add    BYTE PTR [rax],al
  400a58:	00 0e                	add    BYTE PTR [rsi],cl
  400a5a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400a5d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400a60:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  400a63:	80 00 3f             	add    BYTE PTR [rax],0x3f
  400a66:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400a68:	2a 33                	sub    dh,BYTE PTR [rbx]
  400a6a:	24 22                	and    al,0x22
  400a6c:	00 00                	add    BYTE PTR [rax],al
  400a6e:	00 00                	add    BYTE PTR [rax],al
  400a70:	1c 00                	sbb    al,0x0
  400a72:	00 00                	add    BYTE PTR [rax],al
  400a74:	44 00 00             	add    BYTE PTR [rax],r8b
  400a77:	00 ce                	add    dh,cl
  400a79:	fb                   	sti    
  400a7a:	ff                   	(bad)  
  400a7b:	ff 5b 00             	call   FWORD PTR [rbx+0x0]
  400a7e:	00 00                	add    BYTE PTR [rax],al
  400a80:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400a83:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a89:	02 56 0c             	add    dl,BYTE PTR [rsi+0xc]
  400a8c:	07                   	(bad)  
  400a8d:	08 00                	or     BYTE PTR [rax],al
  400a8f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a92:	00 00                	add    BYTE PTR [rax],al
  400a94:	64 00 00             	add    BYTE PTR fs:[rax],al
  400a97:	00 09                	add    BYTE PTR [rcx],cl
  400a99:	fc                   	cld    
  400a9a:	ff                   	(bad)  
  400a9b:	ff                   	(bad)  
  400a9c:	7f 00                	jg     400a9e <__GNU_EH_FRAME_HDR+0xda>
  400a9e:	00 00                	add    BYTE PTR [rax],al
  400aa0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400aa3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400aa9:	02 7a 0c             	add    bh,BYTE PTR [rdx+0xc]
  400aac:	07                   	(bad)  
  400aad:	08 00                	or     BYTE PTR [rax],al
  400aaf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  400ab3:	00 84 00 00 00 68 fc 	add    BYTE PTR [rax+rax*1-0x3980000],al
  400aba:	ff                   	(bad)  
  400abb:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  400abe:	00 00                	add    BYTE PTR [rax],al
  400ac0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  400ac3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400ac9:	8e 03                	mov    es,WORD PTR [rbx]
  400acb:	45 0e                	rex.RB (bad) 
  400acd:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  400ad3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86701921 <_end+0xffffffff86100881>
  400ad9:	06                   	(bad)  
  400ada:	48 0e                	rex.W (bad) 
  400adc:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  400ae2:	72 0e                	jb     400af2 <__GNU_EH_FRAME_HDR+0x12e>
  400ae4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  400ae7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400aea:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400aed:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400af0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400af3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400af6:	08 00                	or     BYTE PTR [rax],al
  400af8:	14 00                	adc    al,0x0
  400afa:	00 00                	add    BYTE PTR [rax],al
  400afc:	cc                   	int3   
  400afd:	00 00                	add    BYTE PTR [rax],al
  400aff:	00 90 fc ff ff 02    	add    BYTE PTR [rax+0x2fffffc],dl
	...

0000000000400b10 <__FRAME_END__>:
  400b10:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	20 06                	and    BYTE PTR [rsi],al
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	00 06                	add    BYTE PTR [rsi],al
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	b8 04 40 00 00       	mov    eax,0x4004
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 94 07 40 00 00 00 	add    BYTE PTR [rdi+rax*1+0x40],dl
  600e56:	00 00                	add    BYTE PTR [rax],al
  600e58:	19 00                	sbb    DWORD PTR [rax],eax
  600e5a:	00 00                	add    BYTE PTR [rax],al
  600e5c:	00 00                	add    BYTE PTR [rax],al
  600e5e:	00 00                	add    BYTE PTR [rax],al
  600e60:	10 0e                	adc    BYTE PTR [rsi],cl
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600eb2:	40 00 00             	add    BYTE PTR [rax],al
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 06                	add    BYTE PTR [rsi],al
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 78 00             	add    BYTE PTR [rax+0x0],bh
  600ed2:	00 00                	add    BYTE PTR [rax],al
  600ed4:	00 00                	add    BYTE PTR [rax],al
  600ed6:	00 00                	add    BYTE PTR [rax],al
  600ed8:	0b 00                	or     eax,DWORD PTR [rax]
  600eda:	00 00                	add    BYTE PTR [rax],al
  600edc:	00 00                	add    BYTE PTR [rax],al
  600ede:	00 00                	add    BYTE PTR [rax],al
  600ee0:	18 00                	sbb    BYTE PTR [rax],al
  600ee2:	00 00                	add    BYTE PTR [rax],al
  600ee4:	00 00                	add    BYTE PTR [rax],al
  600ee6:	00 00                	add    BYTE PTR [rax],al
  600ee8:	15 00 00 00 00       	adc    eax,0x0
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	78 00                	js     600f12 <_DYNAMIC+0xea>
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	14 00                	adc    al,0x0
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 40 04             	add    BYTE PTR [rax+0x4],al
  600f32:	40 00 00             	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 28                	add    BYTE PTR [rax],ch
  600f41:	04 40                	add    al,0x40
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 e8                	add    al,ch
  600f71:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600f74:	00 00                	add    BYTE PTR [rax],al
  600f76:	00 00                	add    BYTE PTR [rax],al
  600f78:	ff                   	(bad)  
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 d8                	add    al,bl
  600f91:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    dh,dh
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 06                	add    BYTE PTR [rsi],al
  601021:	05 40 00 00 00       	add    eax,0x40
  601026:	00 00                	add    BYTE PTR [rax],al
  601028:	16                   	(bad)  
  601029:	05 40 00 00 00       	add    eax,0x40
  60102e:	00 00                	add    BYTE PTR [rax],al
  601030:	26 05 40 00 00 00    	es add eax,0x40
  601036:	00 00                	add    BYTE PTR [rax],al
  601038:	36 05 40 00 00 00    	ss add eax,0x40
	...

Disassembly of section .data:

0000000000601040 <__data_start>:
	...

0000000000601048 <__dso_handle>:
	...

0000000000601060 <fortunes>:
  601060:	a8 07                	test   al,0x7
  601062:	40 00 00             	add    BYTE PTR [rax],al
  601065:	00 00                	add    BYTE PTR [rax],al
  601067:	00 d8                	add    al,bl
  601069:	07                   	(bad)  
  60106a:	40 00 00             	add    BYTE PTR [rax],al
  60106d:	00 00                	add    BYTE PTR [rax],al
  60106f:	00 08                	add    BYTE PTR [rax],cl
  601071:	08 40 00             	or     BYTE PTR [rax+0x0],al
  601074:	00 00                	add    BYTE PTR [rax],al
  601076:	00 00                	add    BYTE PTR [rax],al
  601078:	30 08                	xor    BYTE PTR [rax],cl
  60107a:	40 00 00             	add    BYTE PTR [rax],al
  60107d:	00 00                	add    BYTE PTR [rax],al
  60107f:	00 70 08             	add    BYTE PTR [rax+0x8],dh
  601082:	40 00 00             	add    BYTE PTR [rax],al
  601085:	00 00                	add    BYTE PTR [rax],al
  601087:	00 c0                	add    al,al
  601089:	08 40 00             	or     BYTE PTR [rax+0x0],al
  60108c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000601090 <not_fortune>:
  601090:	ed                   	in     eax,dx
  601091:	08 40 00             	or     BYTE PTR [rax+0x0],al
  601094:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000601098 <completed.7594>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400440>
   a:	74 75                	je     81 <_init-0x400437>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce23a0>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400429>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 30                	xor    DWORD PTR [rax],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
